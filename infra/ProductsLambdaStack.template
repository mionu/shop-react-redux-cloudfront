Resources:
  getProductsListServiceRoleC64A5CD3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ProductsLambdaStack/getProductsList/ServiceRole/Resource
  getProductsListServiceRoleDefaultPolicyFCF405B6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::ImportValue: DbTablesStack:ExportsOutputFnGetAttProducts229621C6Arn99C6A79A
              - Fn::ImportValue: DbTablesStack:ExportsOutputFnGetAttStocks8F3F0432Arn94EAFEBF
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: getProductsListServiceRoleDefaultPolicyFCF405B6
      Roles:
        - Ref: getProductsListServiceRoleC64A5CD3
    Metadata:
      aws:cdk:path: ProductsLambdaStack/getProductsList/ServiceRole/DefaultPolicy/Resource
  getProductsList1F4CE4F4:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: fff37b0d170670d8d26c333450723e53d3f5154e526e2e077528e26f6aab88c1.zip
      Environment:
        Variables:
          PRODUCTS_TABLE: Products
          STOCKS_TABLE: Stocks
      Handler: handler.getProductsList
      MemorySize: 1024
      Role:
        Fn::GetAtt:
          - getProductsListServiceRoleC64A5CD3
          - Arn
      Runtime: nodejs20.x
      Timeout: 5
    DependsOn:
      - getProductsListServiceRoleDefaultPolicyFCF405B6
      - getProductsListServiceRoleC64A5CD3
    Metadata:
      aws:cdk:path: ProductsLambdaStack/getProductsList/Resource
      aws:asset:path: asset.fff37b0d170670d8d26c333450723e53d3f5154e526e2e077528e26f6aab88c1
      aws:asset:is-bundled: false
      aws:asset:property: Code
  getProductsByIdServiceRoleD8824A03:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ProductsLambdaStack/getProductsById/ServiceRole/Resource
  getProductsByIdServiceRoleDefaultPolicyF36017B0:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::ImportValue: DbTablesStack:ExportsOutputFnGetAttProducts229621C6Arn99C6A79A
              - Fn::ImportValue: DbTablesStack:ExportsOutputFnGetAttStocks8F3F0432Arn94EAFEBF
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: getProductsByIdServiceRoleDefaultPolicyF36017B0
      Roles:
        - Ref: getProductsByIdServiceRoleD8824A03
    Metadata:
      aws:cdk:path: ProductsLambdaStack/getProductsById/ServiceRole/DefaultPolicy/Resource
  getProductsById008BCA51:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: fff37b0d170670d8d26c333450723e53d3f5154e526e2e077528e26f6aab88c1.zip
      Environment:
        Variables:
          PRODUCTS_TABLE: Products
          STOCKS_TABLE: Stocks
      Handler: handler.getProductsById
      MemorySize: 1024
      Role:
        Fn::GetAtt:
          - getProductsByIdServiceRoleD8824A03
          - Arn
      Runtime: nodejs20.x
      Timeout: 5
    DependsOn:
      - getProductsByIdServiceRoleDefaultPolicyF36017B0
      - getProductsByIdServiceRoleD8824A03
    Metadata:
      aws:cdk:path: ProductsLambdaStack/getProductsById/Resource
      aws:asset:path: asset.fff37b0d170670d8d26c333450723e53d3f5154e526e2e077528e26f6aab88c1
      aws:asset:is-bundled: false
      aws:asset:property: Code
  productsapi7D590FA8:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: This API serves the Lambda functions.
      Name: Products API
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Resource
  productsapiDeployment21EB96E4029f82a8ddea5bc9f34dcc774ebf2783:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: This API serves the Lambda functions.
      RestApiId:
        Ref: productsapi7D590FA8
    DependsOn:
      - productsapiproductsproductidGET752017E7
      - productsapiproductsproductid3AA710FE
      - productsapiproductsGETCACF88FF
      - productsapiproductsD87799F9
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Deployment/Resource
  productsapiDeploymentStageprod1993B0A7:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: productsapiDeployment21EB96E4029f82a8ddea5bc9f34dcc774ebf2783
      RestApiId:
        Ref: productsapi7D590FA8
      StageName: prod
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/DeploymentStage.prod/Resource
  productsapiproductsD87799F9:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - productsapi7D590FA8
          - RootResourceId
      PathPart: products
      RestApiId:
        Ref: productsapi7D590FA8
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/Resource
  productsapiproductsGETApiPermissionProductsLambdaStackproductsapiFE4FD426GETproductsAADE3137:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getProductsList1F4CE4F4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: productsapi7D590FA8
            - /
            - Ref: productsapiDeploymentStageprod1993B0A7
            - /GET/products
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/GET/ApiPermission.ProductsLambdaStackproductsapiFE4FD426.GET..products
  productsapiproductsGETApiPermissionTestProductsLambdaStackproductsapiFE4FD426GETproducts98B0746E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getProductsList1F4CE4F4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: productsapi7D590FA8
            - /test-invoke-stage/GET/products
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/GET/ApiPermission.Test.ProductsLambdaStackproductsapiFE4FD426.GET..products
  productsapiproductsGETCACF88FF:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - getProductsList1F4CE4F4
                  - Arn
              - /invocations
      ResourceId:
        Ref: productsapiproductsD87799F9
      RestApiId:
        Ref: productsapi7D590FA8
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/GET/Resource
  productsapiproductsproductid3AA710FE:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: productsapiproductsD87799F9
      PathPart: "{product_id}"
      RestApiId:
        Ref: productsapi7D590FA8
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/{product_id}/Resource
  productsapiproductsproductidGETApiPermissionProductsLambdaStackproductsapiFE4FD426GETproductsproductid9D62A3D6:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getProductsById008BCA51
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: productsapi7D590FA8
            - /
            - Ref: productsapiDeploymentStageprod1993B0A7
            - /GET/products/*
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/{product_id}/GET/ApiPermission.ProductsLambdaStackproductsapiFE4FD426.GET..products.{product_id}
  productsapiproductsproductidGETApiPermissionTestProductsLambdaStackproductsapiFE4FD426GETproductsproductid6D891589:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getProductsById008BCA51
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: productsapi7D590FA8
            - /test-invoke-stage/GET/products/*
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/{product_id}/GET/ApiPermission.Test.ProductsLambdaStackproductsapiFE4FD426.GET..products.{product_id}
  productsapiproductsproductidGET752017E7:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - getProductsById008BCA51
                  - Arn
              - /invocations
      ResourceId:
        Ref: productsapiproductsproductid3AA710FE
      RestApiId:
        Ref: productsapi7D590FA8
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/{product_id}/GET/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/91UTWsbMRD9LdExyGriQCm+2f2AQD+M7dtiwkSarifelRZJG+MK//ciadfr4OAeQqH0JOnN0+jNkzRjcfvhvbi5gp0bSbUdVfQowtKD3HLYuYdQQf2oQIQvrZaejC4Cs632VCObsGvGWY21sfsl/eqBGDOt71Yb0KpC262kUT0N9TNZo2vUmXrggYFSn0/hIjGv2fqPwX9O05p//Kl70+J8jrYm58joAyeoRViYCovAwLm2RjXbs0lgjSUtqYFqKqVpdS84c+KGacrXiWM1aChRzU1FktCxSRFeYPup7bi92pWZ90dkRtzTRb0HubnXFWk8xo6FXgxezvtfF5juOQrnGU4voE+3MjFydso5rNTSg8f4iNyJ4Nfgv5w/1ZNLOXB39wDOoXdiGgfu7sSslVv0M3BYrDk0VILHHexFWKDz04Zif8iz73D8jwqdtNQMN5tdyzz+CZvK7KOIIpxROYOGuplFD6QHujv9pCvz1ZQkobpXLyp8O57EDqfypYcSk9QeOikqBfkCnWmtxORTvIUjUgTWgMXjy2/Ab+Zgh35zIdq7lhLxb+g3RmW/E9J3N++bHOsA0h5LCyeWmuTvYN8bMyRdecPhMFTa90KeHk80hnQZqT9a37T+wLVRKJ7cu+fxWNyOxc3VkyMada1cLPL4G1xKm4ChBgAA
    Metadata:
      aws:cdk:path: ProductsLambdaStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  productsapiEndpoint053D11BE:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: productsapi7D590FA8
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: productsapiDeploymentStageprod1993B0A7
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-3
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-3
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-4
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
      - Fn::Equals:
          - Ref: AWS::Region
          - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]

