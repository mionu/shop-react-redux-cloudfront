Resources:
  BasicAuthorizerLambdaProductsLambdaStackProductsBasicAuthorizer75DB2E63Permissions6BDF0700:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::ImportValue: AuthServiceStack:ExportsOutputFnGetAttbasicAuthorizerF74DD00AArnF4D47D0D
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: productsapi7D590FA8
            - /authorizers/
            - Ref: ProductsBasicAuthorizer535A1E3F
    Metadata:
      aws:cdk:path: ProductsLambdaStack/BasicAuthorizerLambda/ProductsLambdaStackProductsBasicAuthorizer75DB2E63:Permissions
  ProductsBasicAuthorizer535A1E3F:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      AuthorizerResultTtlInSeconds: 300
      AuthorizerUri:
        Fn::Join:
          - ""
          - - "arn:"
            - Fn::Select:
                - 1
                - Fn::Split:
                    - ":"
                    - Fn::ImportValue: AuthServiceStack:ExportsOutputFnGetAttbasicAuthorizerF74DD00AArnF4D47D0D
            - ":apigateway:"
            - Fn::Select:
                - 3
                - Fn::Split:
                    - ":"
                    - Fn::ImportValue: AuthServiceStack:ExportsOutputFnGetAttbasicAuthorizerF74DD00AArnF4D47D0D
            - :lambda:path/2015-03-31/functions/
            - Fn::ImportValue: AuthServiceStack:ExportsOutputFnGetAttbasicAuthorizerF74DD00AArnF4D47D0D
            - /invocations
      IdentitySource: method.request.header.Authorization
      Name: ProductsLambdaStackProductsBasicAuthorizer75DB2E63
      RestApiId:
        Ref: productsapi7D590FA8
      Type: TOKEN
    Metadata:
      aws:cdk:path: ProductsLambdaStack/ProductsBasicAuthorizer/Resource
  getProductsListServiceRoleC64A5CD3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ProductsLambdaStack/getProductsList/ServiceRole/Resource
  getProductsListServiceRoleDefaultPolicyFCF405B6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::ImportValue: DbTablesStack:ExportsOutputFnGetAttProducts229621C6Arn99C6A79A
              - Fn::ImportValue: DbTablesStack:ExportsOutputFnGetAttStocks8F3F0432Arn94EAFEBF
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: getProductsListServiceRoleDefaultPolicyFCF405B6
      Roles:
        - Ref: getProductsListServiceRoleC64A5CD3
    Metadata:
      aws:cdk:path: ProductsLambdaStack/getProductsList/ServiceRole/DefaultPolicy/Resource
  getProductsList1F4CE4F4:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 50fe41aff457edfc205197afe908ca2294e9a5573fdd55232dd478d46b545b99.zip
      Environment:
        Variables:
          PRODUCTS_TABLE: Products
          STOCKS_TABLE: Stocks
      Handler: handler.getProductsList
      MemorySize: 1024
      Role:
        Fn::GetAtt:
          - getProductsListServiceRoleC64A5CD3
          - Arn
      Runtime: nodejs20.x
      Timeout: 5
    DependsOn:
      - getProductsListServiceRoleDefaultPolicyFCF405B6
      - getProductsListServiceRoleC64A5CD3
    Metadata:
      aws:cdk:path: ProductsLambdaStack/getProductsList/Resource
      aws:asset:path: asset.50fe41aff457edfc205197afe908ca2294e9a5573fdd55232dd478d46b545b99
      aws:asset:is-bundled: false
      aws:asset:property: Code
  createProductServiceRole49F078DF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ProductsLambdaStack/createProduct/ServiceRole/Resource
  createProductServiceRoleDefaultPolicyA4987AF8:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::ImportValue: DbTablesStack:ExportsOutputFnGetAttProducts229621C6Arn99C6A79A
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: createProductServiceRoleDefaultPolicyA4987AF8
      Roles:
        - Ref: createProductServiceRole49F078DF
    Metadata:
      aws:cdk:path: ProductsLambdaStack/createProduct/ServiceRole/DefaultPolicy/Resource
  createProduct6AB81851:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 50fe41aff457edfc205197afe908ca2294e9a5573fdd55232dd478d46b545b99.zip
      Environment:
        Variables:
          PRODUCTS_TABLE: Products
      Handler: handler.createProduct
      MemorySize: 1024
      Role:
        Fn::GetAtt:
          - createProductServiceRole49F078DF
          - Arn
      Runtime: nodejs20.x
      Timeout: 5
    DependsOn:
      - createProductServiceRoleDefaultPolicyA4987AF8
      - createProductServiceRole49F078DF
    Metadata:
      aws:cdk:path: ProductsLambdaStack/createProduct/Resource
      aws:asset:path: asset.50fe41aff457edfc205197afe908ca2294e9a5573fdd55232dd478d46b545b99
      aws:asset:is-bundled: false
      aws:asset:property: Code
  getProductsByIdServiceRoleD8824A03:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ProductsLambdaStack/getProductsById/ServiceRole/Resource
  getProductsByIdServiceRoleDefaultPolicyF36017B0:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::ImportValue: DbTablesStack:ExportsOutputFnGetAttProducts229621C6Arn99C6A79A
              - Fn::ImportValue: DbTablesStack:ExportsOutputFnGetAttStocks8F3F0432Arn94EAFEBF
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: getProductsByIdServiceRoleDefaultPolicyF36017B0
      Roles:
        - Ref: getProductsByIdServiceRoleD8824A03
    Metadata:
      aws:cdk:path: ProductsLambdaStack/getProductsById/ServiceRole/DefaultPolicy/Resource
  getProductsById008BCA51:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 50fe41aff457edfc205197afe908ca2294e9a5573fdd55232dd478d46b545b99.zip
      Environment:
        Variables:
          PRODUCTS_TABLE: Products
          STOCKS_TABLE: Stocks
      Handler: handler.getProductsById
      MemorySize: 1024
      Role:
        Fn::GetAtt:
          - getProductsByIdServiceRoleD8824A03
          - Arn
      Runtime: nodejs20.x
      Timeout: 5
    DependsOn:
      - getProductsByIdServiceRoleDefaultPolicyF36017B0
      - getProductsByIdServiceRoleD8824A03
    Metadata:
      aws:cdk:path: ProductsLambdaStack/getProductsById/Resource
      aws:asset:path: asset.50fe41aff457edfc205197afe908ca2294e9a5573fdd55232dd478d46b545b99
      aws:asset:is-bundled: false
      aws:asset:property: Code
  productsapi7D590FA8:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: This API serves the Lambda functions.
      Name: Products API
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Resource
  productsapiDeployment21EB96E4fcc8f33ed622fa33b36006151d8f2b57:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: This API serves the Lambda functions.
      RestApiId:
        Ref: productsapi7D590FA8
    DependsOn:
      - productsapiproductsproductidGET752017E7
      - productsapiproductsproductid3AA710FE
      - productsapiproductsGETCACF88FF
      - productsapiproductsOPTIONSC2962435
      - productsapiproductsPOST6D9A61D5
      - productsapiproductsD87799F9
      - ProductsBasicAuthorizer535A1E3F
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Deployment/Resource
  productsapiDeploymentStageprod1993B0A7:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: productsapiDeployment21EB96E4fcc8f33ed622fa33b36006151d8f2b57
      RestApiId:
        Ref: productsapi7D590FA8
      StageName: prod
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/DeploymentStage.prod/Resource
  productsapiproductsD87799F9:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - productsapi7D590FA8
          - RootResourceId
      PathPart: products
      RestApiId:
        Ref: productsapi7D590FA8
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/Resource
  productsapiproductsOPTIONSC2962435:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: productsapiproductsD87799F9
      RestApiId:
        Ref: productsapi7D590FA8
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/OPTIONS/Resource
  productsapiproductsGETApiPermissionProductsLambdaStackproductsapiFE4FD426GETproductsAADE3137:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getProductsList1F4CE4F4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: productsapi7D590FA8
            - /
            - Ref: productsapiDeploymentStageprod1993B0A7
            - /GET/products
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/GET/ApiPermission.ProductsLambdaStackproductsapiFE4FD426.GET..products
  productsapiproductsGETApiPermissionTestProductsLambdaStackproductsapiFE4FD426GETproducts98B0746E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getProductsList1F4CE4F4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: productsapi7D590FA8
            - /test-invoke-stage/GET/products
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/GET/ApiPermission.Test.ProductsLambdaStackproductsapiFE4FD426.GET..products
  productsapiproductsGETCACF88FF:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: ProductsBasicAuthorizer535A1E3F
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - getProductsList1F4CE4F4
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "404"
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "500"
      ResourceId:
        Ref: productsapiproductsD87799F9
      RestApiId:
        Ref: productsapi7D590FA8
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/GET/Resource
  productsapiproductsPOSTApiPermissionProductsLambdaStackproductsapiFE4FD426POSTproductsCA1B2E9F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - createProduct6AB81851
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: productsapi7D590FA8
            - /
            - Ref: productsapiDeploymentStageprod1993B0A7
            - /POST/products
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/POST/ApiPermission.ProductsLambdaStackproductsapiFE4FD426.POST..products
  productsapiproductsPOSTApiPermissionTestProductsLambdaStackproductsapiFE4FD426POSTproductsD5CB44A5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - createProduct6AB81851
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: productsapi7D590FA8
            - /test-invoke-stage/POST/products
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/POST/ApiPermission.Test.ProductsLambdaStackproductsapiFE4FD426.POST..products
  productsapiproductsPOST6D9A61D5:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: ProductsBasicAuthorizer535A1E3F
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - createProduct6AB81851
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "404"
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "500"
      ResourceId:
        Ref: productsapiproductsD87799F9
      RestApiId:
        Ref: productsapi7D590FA8
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/POST/Resource
  productsapiproductsproductid3AA710FE:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: productsapiproductsD87799F9
      PathPart: "{product_id}"
      RestApiId:
        Ref: productsapi7D590FA8
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/{product_id}/Resource
  productsapiproductsproductidGETApiPermissionProductsLambdaStackproductsapiFE4FD426GETproductsproductid9D62A3D6:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getProductsById008BCA51
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: productsapi7D590FA8
            - /
            - Ref: productsapiDeploymentStageprod1993B0A7
            - /GET/products/*
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/{product_id}/GET/ApiPermission.ProductsLambdaStackproductsapiFE4FD426.GET..products.{product_id}
  productsapiproductsproductidGETApiPermissionTestProductsLambdaStackproductsapiFE4FD426GETproductsproductid6D891589:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getProductsById008BCA51
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: productsapi7D590FA8
            - /test-invoke-stage/GET/products/*
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/{product_id}/GET/ApiPermission.Test.ProductsLambdaStackproductsapiFE4FD426.GET..products.{product_id}
  productsapiproductsproductidGET752017E7:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: ProductsBasicAuthorizer535A1E3F
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - getProductsById008BCA51
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "200"
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "404"
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true
          StatusCode: "500"
      ResourceId:
        Ref: productsapiproductsproductid3AA710FE
      RestApiId:
        Ref: productsapi7D590FA8
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/{product_id}/GET/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/+1X30/bMBD+W/AjMhkUaZr6VtgmVRtb1fatqtBhH61pYnu2AwpR/vfJP9KEVTBNA42hPiX57u7L3X22fB5kJx/eZ8cHcGePGN8c5eIqq2cO2IbCnb2scyiuOGT151IyJ5Q8A4uLJT2/lhM0hbBWKElb46ImppROFEiG5JBQUmChTDUT9y3gbap06WsNkudo0hdTvHVDeSuMkgXK6NrQmgDnn/rwIngekuVvjf8op1fXiiBbq1VDQYsVOLyDKqvnaoNyVLq1MuIejY8J3h1Ep2jdSAuvcXz7BtviOFpmhPa8MckQnCLoR9S5qnw2i3rHlRLQIr0ZdCBk5277Fc/VV7USDPIxJ8NF3Sz/ezw0qauWzhysMLSohXrNDEYvgioNw7ANg0gtsqiJBtPGUKLBrSdgukXzhLVVKxDRC3RrxaPOAWmXqHM62hIgpMOVgZ6UKuhqybAmsF05D7/GbXQLhfh5pTFl6tfDF6ym+KMUBjkZXkNu8TF/v7F8SlO0WkmL1veWWAeutOfdLjLJPAEDBTo0aWktm6TOxQOWPyWhz9SsX2vrN/Hvi6Uv5Pt8TXwtHHsxX4kQezH3YnYc4ZyKFA0VUGT1VOX+5ANrywL5WeUl00ZIJjTkI8ZUuT3yoo8PGLFuUKGkAAkr5BOVCyaScH2sGhn5sIi5mrS/iB69c945YOuxzIXErW07mT1pfJr3DRT4Bkp4nDeOUCpHGuEwdbd0c+UtO3/ZhTmfOXCYZt/e8LgLPxv/Cyca74qhJw21p5dgLTqbjfyD2tPsrGQbdPFa2XTTbLq0hIsLDc5+ABZy5em+l06XrqFSccxu7LvbwSA7GWTHBzdWiKN078qm8fkTfJTm9+IOAAA=
    Metadata:
      aws:cdk:path: ProductsLambdaStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  productsapiEndpoint053D11BE:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: productsapi7D590FA8
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: productsapiDeploymentStageprod1993B0A7
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-3
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-3
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-4
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
      - Fn::Equals:
          - Ref: AWS::Region
          - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]

