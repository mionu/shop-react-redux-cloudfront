Resources:
  getProductsListServiceRoleC64A5CD3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ProductsLambdaStack/getProductsList/ServiceRole/Resource
  getProductsList1F4CE4F4:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: d4b3408e2864c03b2baec79c8383d61de2ffd27917bb3cfcfa53c8771c765ae1.zip
      Handler: get-products-list.main
      MemorySize: 1024
      Role:
        Fn::GetAtt:
          - getProductsListServiceRoleC64A5CD3
          - Arn
      Runtime: nodejs20.x
      Timeout: 5
    DependsOn:
      - getProductsListServiceRoleC64A5CD3
    Metadata:
      aws:cdk:path: ProductsLambdaStack/getProductsList/Resource
      aws:asset:path: asset.d4b3408e2864c03b2baec79c8383d61de2ffd27917bb3cfcfa53c8771c765ae1
      aws:asset:is-bundled: false
      aws:asset:property: Code
  getProductsByIdServiceRoleD8824A03:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ProductsLambdaStack/getProductsById/ServiceRole/Resource
  getProductsById008BCA51:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: d4b3408e2864c03b2baec79c8383d61de2ffd27917bb3cfcfa53c8771c765ae1.zip
      Handler: get-product-by-id.main
      MemorySize: 1024
      Role:
        Fn::GetAtt:
          - getProductsByIdServiceRoleD8824A03
          - Arn
      Runtime: nodejs20.x
      Timeout: 5
    DependsOn:
      - getProductsByIdServiceRoleD8824A03
    Metadata:
      aws:cdk:path: ProductsLambdaStack/getProductsById/Resource
      aws:asset:path: asset.d4b3408e2864c03b2baec79c8383d61de2ffd27917bb3cfcfa53c8771c765ae1
      aws:asset:is-bundled: false
      aws:asset:property: Code
  productsapi7D590FA8:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: This API serves the Lambda functions.
      Name: Products API
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Resource
  productsapiDeployment21EB96E4b4e57df2e17aa7c15f4c86261dabaa44:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: This API serves the Lambda functions.
      RestApiId:
        Ref: productsapi7D590FA8
    DependsOn:
      - productsapiOPTIONS74639306
      - productsapiproductsproductidGET752017E7
      - productsapiproductsproductidOPTIONS23F37165
      - productsapiproductsproductid3AA710FE
      - productsapiproductsGETCACF88FF
      - productsapiproductsOPTIONSC2962435
      - productsapiproductsD87799F9
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Deployment/Resource
  productsapiDeploymentStageprod1993B0A7:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: productsapiDeployment21EB96E4b4e57df2e17aa7c15f4c86261dabaa44
      RestApiId:
        Ref: productsapi7D590FA8
      StageName: prod
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/DeploymentStage.prod/Resource
  productsapiOPTIONS74639306:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Fn::GetAtt:
          - productsapi7D590FA8
          - RootResourceId
      RestApiId:
        Ref: productsapi7D590FA8
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/OPTIONS/Resource
  productsapiproductsD87799F9:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - productsapi7D590FA8
          - RootResourceId
      PathPart: products
      RestApiId:
        Ref: productsapi7D590FA8
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/Resource
  productsapiproductsOPTIONSC2962435:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: productsapiproductsD87799F9
      RestApiId:
        Ref: productsapi7D590FA8
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/OPTIONS/Resource
  productsapiproductsGETApiPermissionProductsLambdaStackproductsapiFE4FD426GETproductsAADE3137:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getProductsList1F4CE4F4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: productsapi7D590FA8
            - /
            - Ref: productsapiDeploymentStageprod1993B0A7
            - /GET/products
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/GET/ApiPermission.ProductsLambdaStackproductsapiFE4FD426.GET..products
  productsapiproductsGETApiPermissionTestProductsLambdaStackproductsapiFE4FD426GETproducts98B0746E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getProductsList1F4CE4F4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: productsapi7D590FA8
            - /test-invoke-stage/GET/products
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/GET/ApiPermission.Test.ProductsLambdaStackproductsapiFE4FD426.GET..products
  productsapiproductsGETCACF88FF:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: "200"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - getProductsList1F4CE4F4
                  - Arn
              - /invocations
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "200"
      ResourceId:
        Ref: productsapiproductsD87799F9
      RestApiId:
        Ref: productsapi7D590FA8
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/GET/Resource
  productsapiproductsproductid3AA710FE:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: productsapiproductsD87799F9
      PathPart: "{product_id}"
      RestApiId:
        Ref: productsapi7D590FA8
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/{product_id}/Resource
  productsapiproductsproductidOPTIONS23F37165:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: productsapiproductsproductid3AA710FE
      RestApiId:
        Ref: productsapi7D590FA8
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/{product_id}/OPTIONS/Resource
  productsapiproductsproductidGETApiPermissionProductsLambdaStackproductsapiFE4FD426GETproductsproductid9D62A3D6:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getProductsById008BCA51
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: productsapi7D590FA8
            - /
            - Ref: productsapiDeploymentStageprod1993B0A7
            - /GET/products/*
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/{product_id}/GET/ApiPermission.ProductsLambdaStackproductsapiFE4FD426.GET..products.{product_id}
  productsapiproductsproductidGETApiPermissionTestProductsLambdaStackproductsapiFE4FD426GETproductsproductid6D891589:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getProductsById008BCA51
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: productsapi7D590FA8
            - /test-invoke-stage/GET/products/*
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/{product_id}/GET/ApiPermission.Test.ProductsLambdaStackproductsapiFE4FD426.GET..products.{product_id}
  productsapiproductsproductidGET752017E7:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: "200"
        RequestTemplates:
          application/json: "{ \"product_id\": \"$input.params('product_id')\" }"
        Type: AWS
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - getProductsById008BCA51
                  - Arn
              - /invocations
      MethodResponses:
        - StatusCode: "200"
        - StatusCode: "404"
      ResourceId:
        Ref: productsapiproductsproductid3AA710FE
      RestApiId:
        Ref: productsapi7D590FA8
    Metadata:
      aws:cdk:path: ProductsLambdaStack/products-api/Default/products/{product_id}/GET/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/+1W30scMRD+W8yjxK2eUMq9nZZSaa3H6dtxyLiZ2xvNJttM0mNd9n8vyf7wlLZUECnFp02++TL5ZiaZ7CQ7+vA+O9yDLR/k6u5A003WXHrI7yRs+brRUN4oyJpPweSerFk2wgXjqUQxFftCihJL6+pLuh+AaLPB97MNGKXR9bPcqo7Wyhfys5KnazOIi+M5upKYyZpWEpRZs7Aal40A5lCiOqnFtBGVI5NTBXqW5zaYYZOOExfMkr9eqijBQIFqbjXlhCymy+YRVs9cz13FwF5rqxR7dNFKPr4GZvSczeJH8nF2EvI79CfAuFxJqKgAj1uos2aB7GcVxUp2o28wVkEh546qUVFE1hC0P7WO5w7XmoqNv0gEjuGB1nZ74aigOO9Ci9A5+o1Vj6DPCApdB7W9+E6A/IiVtnWJxi+bX2iAivqRQw9kHug8niZQ6sp+tQXloM9UzFtfjH8JT0E/qJeXHgpMIQ/QzqlORrlAtsHlmAop9sVKdqntypdMwxXxvupsPUDGY+FgJ5F2p3DBb6yj+3indmdnw+oBSuuv6mq4uLEaX7Be4PdADpWYrkEz/o4fL3aUtECurOH+RLMHH/h0uMWxrp15Dg5K9OMxWbV9Ls8feXmuE/mWrNdL1v8Qw1vBX7bgcY+n0DPUjy31r6ipe3bMsX0uG1GBw/H9rcBv5uD8qO4P1uGpSo7a9sFn4saWnB7d2K/JFJF8EXwVfCuNVZjd8rsfk0l2NMkO926Z6KD/8ckW3fcndT95hIMJAAA=
    Metadata:
      aws:cdk:path: ProductsLambdaStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  productsapiEndpoint053D11BE:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: productsapi7D590FA8
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: productsapiDeploymentStageprod1993B0A7
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-3
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-3
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-4
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
      - Fn::Equals:
          - Ref: AWS::Region
          - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]

